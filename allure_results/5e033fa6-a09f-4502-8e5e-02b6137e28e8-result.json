{"name": "Проверка соответствия текстов ответов на вопросы о важном", "status": "failed", "statusDetails": {"message": "AssertionError: Значение текста вопроса ожидалось: \"Сколько это стоит? И как оплатить?\", получено \"Вы привозите зарядку вместе с самокатом?\"\nassert 'Вы привозите... с самокатом?' == 'Сколько это ...как оплатить?'\n  - Сколько это стоит? И как оплатить?\n  + Вы привозите зарядку вместе с самокатом?", "trace": "self = <tests.test_questions.TestQuestions object at 0x00000221EEA85110>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"f9dfb17c-4aba-4800-811b-e983957e7c37\")>\nquestion = ('id', 'accordion__heading-5')\n\n    @allure.title('Проверка соответствия текстов ответов на вопросы о важном')\n    @pytest.mark.parametrize('question', QuestionPageLocators.questions)\n    def test_is_text_the_same(self, driver, question):\n        question_page = QuestionPage(driver)\n        question_page.open_page(URLS.BASE_URL)\n        question_page.wait_element_is_clickable(question)\n        question_page.click_element(BaseLocators.accept_coockies)\n        question_page.click_element(question)\n        answer = QuestionPageLocators.question_texts_list[TestQuestions.i]\n        TestQuestions.i += 1\n>       assert question_page.get_answer_text(question) == answer, \\\n            (f'Значение текста вопроса ожидалось: \"{answer}\", '\n             f'получено \"{question_page.get_answer_text(question)}\"')\nE       AssertionError: Значение текста вопроса ожидалось: \"Сколько это стоит? И как оплатить?\", получено \"Вы привозите зарядку вместе с самокатом?\"\nE       assert 'Вы привозите... с самокатом?' == 'Сколько это ...как оплатить?'\nE         - Сколько это стоит? И как оплатить?\nE         + Вы привозите зарядку вместе с самокатом?\n\ntests\\test_questions.py:27: AssertionError"}, "steps": [{"name": "Open 'https://qa-scooter.praktikum-services.ru/' page", "status": "passed", "parameters": [{"name": "url", "value": "'https://qa-scooter.praktikum-services.ru/'"}], "start": 1703091512665, "stop": 1703091516605}, {"name": "Wait element to be clickable ('id', 'accordion__heading-5')", "status": "passed", "parameters": [{"name": "locator", "value": "('id', 'accordion__heading-5')"}], "start": 1703091516606, "stop": 1703091516637}, {"name": "Click element ('id', 'rcc-confirm-button')", "status": "passed", "steps": [{"name": "Get element ('id', 'rcc-confirm-button')", "status": "passed", "steps": [{"name": "Wait element ('id', 'rcc-confirm-button')", "status": "passed", "parameters": [{"name": "locator", "value": "('id', 'rcc-confirm-button')"}], "start": 1703091516638, "stop": 1703091516647}], "parameters": [{"name": "locator", "value": "('id', 'rcc-confirm-button')"}], "start": 1703091516638, "stop": 1703091516649}], "parameters": [{"name": "locator", "value": "('id', 'rcc-confirm-button')"}], "start": 1703091516637, "stop": 1703091516873}, {"name": "Click element ('id', 'accordion__heading-5')", "status": "passed", "steps": [{"name": "Get element ('id', 'accordion__heading-5')", "status": "passed", "steps": [{"name": "Wait element ('id', 'accordion__heading-5')", "status": "passed", "parameters": [{"name": "locator", "value": "('id', 'accordion__heading-5')"}], "start": 1703091516874, "stop": 1703091516883}], "parameters": [{"name": "locator", "value": "('id', 'accordion__heading-5')"}], "start": 1703091516873, "stop": 1703091516886}], "parameters": [{"name": "locator", "value": "('id', 'accordion__heading-5')"}], "start": 1703091516873, "stop": 1703091517103}, {"name": "Get answer of question ('id', 'accordion__heading-5')", "status": "passed", "parameters": [{"name": "question", "value": "('id', 'accordion__heading-5')"}], "start": 1703091517103, "stop": 1703091517109}, {"name": "Get answer of question ('id', 'accordion__heading-5')", "status": "passed", "parameters": [{"name": "question", "value": "('id', 'accordion__heading-5')"}], "start": 1703091517110, "stop": 1703091517113}], "parameters": [{"name": "question", "value": "('id', 'accordion__heading-5')"}], "start": 1703091512665, "stop": 1703091517114, "uuid": "9f215ab0-e4ac-4c1b-8968-511cd624b1f7", "historyId": "8817aa48869e66f748e856876a2de093", "testCaseId": "66fe11f4e1ef2fc11d795dff7a9d4577", "fullName": "tests.test_questions.TestQuestions#test_is_text_the_same", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_questions"}, {"name": "subSuite", "value": "TestQuestions"}, {"name": "host", "value": "DESKTOP-PR51OJ8"}, {"name": "thread", "value": "114368-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_questions"}]}